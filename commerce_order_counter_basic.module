<?php

/**
 * @file   commerce_order_counter_basic.module
 * @author Augustin Delaporte <guss.tissier@gmail.com>
 *         Ant√≥nio P. P. Almeida <appa@perusio.net>
 * @date   Wed Mar  6 17:34:28 2013
 *
 * @brief  Implements the basic commerce order counter as defined by the
 *         commerce_order_counter module. In this case a simple sequential
 *         order counter.
 */

/**
 *
 *  Implements the CommerceOrderCounter interface. Provides a basic
 *  CommerceOrderCounter class that implements a sequential counter.
 *
 */
class BasicCommerceOrderCounter implements CommerceOrderCounterInterface {

  /**
   * The setter for the class.
   *
   * @see CommerceOrderCounterInterface
   */
  public static function commerce_order_counter_set($counter_value) {
    $value = $counter_value;

    variable_set('commerce_order_counter_value', $value++);

    return $value;
  } // commerce_order_counter_set

  /**
   * The getter for the class.
   *
   * @see CommerceOrderCounterInterface
   */
  public static function commerce_order_counter_get() {
    return intval(variable_get('commerce_order_counter_value', 1));
  } // commerce_order_counter_get
}

/**
 * Wrapper function for the CommerceOrderCounterInterface setter.
 *
 * @param integer|string $counter_value
 *
 * @return integer|string
 *   The new value.
 */
function commerce_order_counter_order_set($counter_value) {
  BasicCommerceOrderCounter::set($counter_value);
} // commerce_order_counter_order_set

/**
 * Wrapper function for the CommerceOrderCounterInterface getter.
 *
 * @return integer|string
 *   The current counter value.
 */
function commerce_order_counter_order_get() {
  BasicCommerceOrderCounter::get();
} // commerce_order_counter_order_get
